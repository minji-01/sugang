import streamlit as st
import pandas as pd

# ------------------------------
# 1. 과목 데이터 정의
# ------------------------------
subjects = [
    # 2학년 2학기 선택 과목
    {"학년":2,"과목명":"고급 대수","학점":4,"분류":"수학","전공":True},
    {"학년":2,"과목명":"고급 미적분","학점":4,"분류":"수학","전공":True},
    {"학년":2,"과목명":"물리학 실험","학점":3,"분류":"과학","전공":True},
    {"학년":2,"과목명":"화학 실험","학점":3,"분류":"과학","전공":True},
    {"학년":2,"과목명":"생명과학 실험","학점":3,"분류":"과학","전공":True},
    {"학년":2,"과목명":"지구과학 실험","학점":3,"분류":"과학","전공":True},
    {"학년":2,"과목명":"인공지능 일반","학점":3,"분류":"정보","전공":True},

    # 3학년 선택 과목
    {"학년":3,"과목명":"사회문제 탐구","학점":2,"분류":"사회","전공":False},
    {"학년":3,"과목명":"기후변화와 지속가능한 세계","학점":2,"분류":"사회","전공":False},
    {"학년":3,"과목명":"AP미적분학Ⅰ","학점":5,"분류":"수학","전공":True},
    {"학년":3,"과목명":"AP일반물리Ⅰ","학점":5,"분류":"과학","전공":True},
    {"학년":3,"과목명":"AP일반화학Ⅰ","학점":5,"분류":"과학","전공":True},
    {"학년":3,"과목명":"AP일반생물학Ⅰ","학점":5,"분류":"과학","전공":True},
    {"학년":3,"과목명":"천문학 세미나","학점":3,"분류":"과학","전공":True},
    {"학년":3,"과목명":"정보 과제 연구","학점":3,"분류":"정보","전공":True},
    {"학년":3,"과목명":"이산 수학","학점":3,"분류":"수학","전공":True},
    {"학년":3,"과목명":"AP일반물리Ⅱ","학점":5,"분류":"과학","전공":True},
    {"학년":3,"과목명":"AP일반화학Ⅱ","학점":5,"분류":"과학","전공":True},
    {"학년":3,"과목명":"인간생활과 생명과학","학점":3,"분류":"과학","전공":True},
    {"학년":3,"과목명":"지구과학개론","학점":3,"분류":"과학","전공":True},
]

df_subjects = pd.DataFrame(subjects)
df_subjects["전공과목"] = df_subjects["전공"].apply(lambda x: "⭕️" if x else "")

# ------------------------------
# 2. 가상 DB (학생별 수강 신청 내역 저장)
# ------------------------------
if "students" not in st.session_state:
    st.session_state["students"] = {}  # {학번: {"이름": str, "선택과목": [list]}}

# ------------------------------
# 3. 로그인/관리자 모드
# ------------------------------
st.sidebar.title("로그인")
user_type = st.sidebar.radio("모드 선택", ["학생","관리자"])

# ------------------------------
# 4. 학생 모드
# ------------------------------
if user_type == "학생":
    st.title("📚 수강 신청 시스템")
    student_id = st.text_input("학번을 입력하세요")
    student_name = st.text_input("이름을 입력하세요")

    if student_id and student_name:
        st.write("### 선택 가능한 과목 목록")
        st.dataframe(df_subjects[["학년","과목명","학점","분류","전공과목"]], use_container_width=True)

        selected = st.multiselect("수강할 과목을 선택하세요", df_subjects["과목명"].tolist())

        if st.button("신청 완료"):
            st.session_state["students"][student_id] = {
                "이름": student_name,
                "선택과목": selected
            }
            st.success(f"{student_name} 학생의 수강 신청이 저장되었습니다.")

        # 본인 신청 내역 확인
        if student_id in st.session_state["students"]:
            my_data = st.session_state["students"][student_id]
            st.subheader("📌 내 수강 신청 내역")
            st.write(pd.DataFrame(df_subjects[df_subjects["과목명"].isin(my_data["선택과목"])]))

# ------------------------------
# 5. 관리자 모드
# ------------------------------
if user_type == "관리자":
    st.title("🛠 관리자 모드: 학생 수강 신청 관리")

    if not st.session_state["students"]:
        st.info("아직 수강 신청한 학생이 없습니다.")
    else:
        for sid, data in st.session_state["students"].items():
            st.write(f"### {data['이름']} ({sid})")

            # 기존 선택 표시
            current_selection = data["선택과목"]

            new_selection = st.multiselect(
                f"{data['이름']} 학생 수강 과목 수정",
                df_subjects["과목명"].tolist(),
                default=current_selection,
                key=sid
            )

            if st.button(f"저장 ({data['이름']})", key=f"save_{sid}"):
                st.session_state["students"][sid]["선택과목"] = new_selection
                st.success(f"{data['이름']} 학생의 수강 신청 내역이 수정되었습니다.")

    # 전체 학생 수강 현황 출력
    st.subheader("📊 전체 학생 수강 신청 현황")
    all_data = []
    for sid, data in st.session_state["students"].items():
        for subj in data["선택과목"]:
            all_data.append({"학번": sid, "이름": data["이름"], "과목명": subj})
    if all_data:
        st.dataframe(pd.DataFrame(all_data))
